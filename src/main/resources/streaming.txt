This design operates on datasets of SIZE elements, streamed over DATADURATION cycles of STREAMINGWIDTH elements. This means that
each dataset has to be split into chunks of STREAMINGWIDTH elements that are input sequentially every cycle.
It has a latency of LATENCY cycles: the output will begin LATENCY cycles after the input has begun.
It supports full-throughput, which means that a new dataset may be input immediately after the previous one.
It requires a delay of GAP cycles between datasets.
In total, this design can therefore perform a new transformation every TOTALGAP cycles.
As single-ported memory is used, there must be precisely TOTALGAP cycles between datasets.
Otherwise, at least DATADURATION additional cycles must be added to ensure that the first output dataset does not get corrupted.
Use the -dualport option to use dual-ported memory instead (use more resources).

The interface works as follows:
- clk: The input clock, a cycle begins on ascending edge.
- reset: Reset signal. It has to be set to 1 during at least one cycle before the first input, and to 0 afterwards.
- next: Signals the arrival of the next dataset. It has to be set high START the first inputs enter, and left at 0 otherwise.
        Particularly, it should not be set to 1 more than once every TOTALGAP cycles, as it might leave the design in a
        confused state, that can only be recovered with a reset.
- next_out: Indicates that a new dataset begins to output.
- INPUTS: The components of the chunks of the dataset. Each of these elements is a HW.
- OUTPUTS: The components of the chunks of the output dataset.

If you would like to refer to this design, the following publications describe the methods used for its generation:
- Streaming permutations: F. Serre, T. Holenstein and M. P端schel, Optimal Circuits for Streamed Linear Permutations using RAM, Proc. FPGA, pp. 215-223, 2016
- Algorithm folding: P. A. Milder, F. Franchetti, J. C. Hoe, and M. P端schel, Computer Generation of Hardware for Linear Digital Signal Processing Transforms, ACM TODAES, Vol. 17, No. 2, 2012
- Compact designs: F. Serre and M. P端schel, Memory-Efficient Fast Fourier Transform on Streaming Data by Fusing Permutations, Proc. FPGA, pp. ??, 2018
- Generator: F. Serre and M. P端schel, DSL-Based Hardware Generation with Scala: Example Fast Fourier Transforms and Sorting Networks, TRETS, 2019

